name: Code check

on:
  workflow_dispatch:
  push:
  pull_request:
    branches:
      - master

jobs:
  PylintCheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.x'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install pylint
      - name: Running Pylint check
        run: |
          pylint $(git ls-files '*.py')

  UnitTest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.x'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: Run Unit Tests
        run: |
          python -m unittest discover -s tests/unit_tests -p 'test_*.py'

  Qodana:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0  # a full history is required for pull request analysis
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.x'
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2023.3
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}

  IntegrationTest:
    runs-on: ubuntu-latest
    needs: [PylintCheck, UnitTest]
    env:
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
    steps:
      - name: checkout source code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.x'

      - name: Build containers
        run: |
          docker-compose build

      - name: Compose up
        run: |
          docker-compose up --abort-on-container-exit
